{"ast":null,"code":"var _jsxFileName = \"E:\\\\todo-app\\\\client\\\\src\\\\components\\\\InAppNotifications.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport { io } from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function InAppNotifications({\n  user\n}) {\n  _s();\n  const [notifications, setNotifications] = useState([]);\n  const [show, setShow] = useState(false);\n  const socketRef = useRef(null);\n  useEffect(() => {\n    // Fetch initial notifications\n    fetch(`${process.env.REACT_APP_API_URL || 'http://localhost:5000'}/api/notifications`, {\n      credentials: 'include'\n    }).then(res => res.json()).then(setNotifications);\n    // Listen for real-time notifications\n    socketRef.current = io(process.env.REACT_APP_API_URL || 'http://localhost:5000', {\n      withCredentials: true\n    });\n    socketRef.current.emit('join', user._id);\n    socketRef.current.on('notification', notif => {\n      setNotifications(prev => [notif, ...prev]);\n      setShow(true);\n      setTimeout(() => setShow(false), 5000);\n    });\n    return () => {\n      socketRef.current.disconnect();\n    };\n  }, [user._id]);\n  const markAllRead = async () => {\n    await fetch(`${process.env.REACT_APP_API_URL || 'http://localhost:5000'}/api/notifications/read-all`, {\n      method: 'PUT',\n      credentials: 'include'\n    });\n    setNotifications(notifications.map(n => ({\n      ...n,\n      read: true\n    })));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fixed top-4 right-4 z-50\",\n    children: [show && notifications[0] && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-calm5 text-white px-4 py-3 rounded shadow-lg animate-bounce\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"font-bold\",\n        children: notifications[0].type.replace(/\\b\\w/g, l => l.toUpperCase())\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: notifications[0].message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this), notifications.length > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: markAllRead,\n      className: \"mt-2 px-3 py-1 bg-calm2 text-calm5 rounded hover:bg-calm3 text-xs\",\n      children: \"Mark all as read\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_s(InAppNotifications, \"/oUbLv0dnTGP6S7U6/kWaaJpZIg=\");\n_c = InAppNotifications;\nvar _c;\n$RefreshReg$(_c, \"InAppNotifications\");","map":{"version":3,"names":["React","useEffect","useState","useRef","io","jsxDEV","_jsxDEV","InAppNotifications","user","_s","notifications","setNotifications","show","setShow","socketRef","fetch","process","env","REACT_APP_API_URL","credentials","then","res","json","current","withCredentials","emit","_id","on","notif","prev","setTimeout","disconnect","markAllRead","method","map","n","read","className","children","type","replace","l","toUpperCase","fileName","_jsxFileName","lineNumber","columnNumber","message","length","onClick","_c","$RefreshReg$"],"sources":["E:/todo-app/client/src/components/InAppNotifications.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\r\nimport { io } from 'socket.io-client';\r\n\r\nexport default function InAppNotifications({ user }) {\r\n  const [notifications, setNotifications] = useState([]);\r\n  const [show, setShow] = useState(false);\r\n  const socketRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    // Fetch initial notifications\r\n    fetch(`${process.env.REACT_APP_API_URL || 'http://localhost:5000'}/api/notifications`, {\r\n      credentials: 'include',\r\n    })\r\n      .then(res => res.json())\r\n      .then(setNotifications);\r\n    // Listen for real-time notifications\r\n    socketRef.current = io(process.env.REACT_APP_API_URL || 'http://localhost:5000', {\r\n      withCredentials: true\r\n    });\r\n    socketRef.current.emit('join', user._id);\r\n    socketRef.current.on('notification', (notif) => {\r\n      setNotifications((prev) => [notif, ...prev]);\r\n      setShow(true);\r\n      setTimeout(() => setShow(false), 5000);\r\n    });\r\n    return () => {\r\n      socketRef.current.disconnect();\r\n    };\r\n  }, [user._id]);\r\n\r\n  const markAllRead = async () => {\r\n    await fetch(`${process.env.REACT_APP_API_URL || 'http://localhost:5000'}/api/notifications/read-all`, {\r\n      method: 'PUT',\r\n      credentials: 'include',\r\n    });\r\n    setNotifications(notifications.map(n => ({ ...n, read: true })));\r\n  };\r\n\r\n  return (\r\n    <div className=\"fixed top-4 right-4 z-50\">\r\n      {show && notifications[0] && (\r\n        <div className=\"bg-calm5 text-white px-4 py-3 rounded shadow-lg animate-bounce\">\r\n          <div className=\"font-bold\">{notifications[0].type.replace(/\\b\\w/g, l => l.toUpperCase())}</div>\r\n          <div>{notifications[0].message}</div>\r\n        </div>\r\n      )}\r\n      {notifications.length > 0 && (\r\n        <button onClick={markAllRead} className=\"mt-2 px-3 py-1 bg-calm2 text-calm5 rounded hover:bg-calm3 text-xs\">Mark all as read</button>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}